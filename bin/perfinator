#!/usr/bin/env ruby

require 'optparse'
require 'methadone'
require 'perfinator.rb'
require 'perfinator/loadtest'

class App
  include Methadone::Main
  include Methadone::CLILogging
  include Perfinator

  main do
    debug "Options set:
      statsd_server: #{options['server']},
      statsd_port: #{options['port']},
      concurrent: #{options['concurrent']},
      requests: #{options['requests']},
      delay: #{options['delay']},
      url_file: #{options['file']}"

    Loadtest.run(statsd_server: options['server'],
                 statsd_port: options['port'], concurrent: options['concurrent'],
                 requests: options['requests'].to_i, delay: options['delay'],
                 url_file: options['file'],
                 statsd_namespace: options['namespace'])

  end

  # supplemental methods here

  # Declare command-line interface here

  description "HTTP load testing and benchmarking tool with statsd output"
  #
  options['server'] = 'localhost'
  on("-s STATSD_SERVER", "--server", "StatsD server to send metrics to")
  options['port'] = '8125'
  on("-p STATSD_PORT", "--port", "StatsD port to send metrics to")

  options['concurrent'] = 10
  on('-c NUM', '--concurrent', 'Simulated concurrent users')

  options['requests'] = 500
  on('-n NUM', '--requests', 'Number of requests to make during the test')

  options['delay'] = 2
  on('-d SECONDS', '--delay', 'Time delay between requests by a given simulated user')

  options['namespace'] = 'perfinator'
  on('-s NAMESPACE', '--namespace', 'StatD namespace to prefix metrics with')

  on('-f FILE', '--file', 'File containing URLs to get')

#  on("--[no-]random","Select URLs from list randomly")


  # Require an argument
  # arg :some_arg 
  #
  # # Make an argument optional
  # arg :optional_arg, :optional

  version Perfinator::VERSION

  use_log_level_option :toggle_debug_on_signal => 'USR1'

  go!
end
